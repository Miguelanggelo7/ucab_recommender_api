"""Sync_With_Actual_DB

Revision ID: e0f6bf16786c
Revises: 
Create Date: 2023-08-04 00:59:37.747306

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'e0f6bf16786c'
down_revision = None
branch_labels = None
depends_on = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('countries',
                    sa.Column('id', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1,
                              maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='countries_pkey')
                    )

    op.create_table('levels',
                    sa.Column('id', sa.SMALLINT(), sa.Identity(always=True, start=1, increment=1, minvalue=1,
                              maxvalue=32767, cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.PrimaryKeyConstraint('id', name='levels_pkey'),
                    postgresql_ignore_search_path=False
                    )

    op.create_table('courses',
                    sa.Column('id', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1,
                              maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('title', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.Column('begin_date', sa.DATE(),
                              autoincrement=False, nullable=True),
                    sa.Column('end_date', sa.DATE(),
                              autoincrement=False, nullable=True),
                    sa.Column('university', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=True),
                    sa.Column('requirements', sa.TEXT(),
                              autoincrement=False, nullable=True),
                    sa.Column('level_id', sa.SMALLINT(),
                              autoincrement=False, nullable=True),
                    sa.Column('country_id', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['country_id'], [
                        'countries.id'], name='courses_fk_country_id', onupdate='CASCADE', ondelete='RESTRICT'),
                    sa.ForeignKeyConstraint(['level_id'], [
                        'levels.id'], name='courses_fk_level_id', onupdate='CASCADE', ondelete='RESTRICT'),
                    sa.PrimaryKeyConstraint('id', name='courses_pkey')
                    )

    op.create_table('users',
                    sa.Column('id', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1,
                              maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('id_card', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.Column('name', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.Column('email', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=True),
                    sa.Column('password', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=False),
                    sa.Column('level_id', sa.SMALLINT(),
                              autoincrement=False, nullable=False),
                    sa.ForeignKeyConstraint(['level_id'], [
                        'levels.id'], name='users_fk_level_id', onupdate='CASCADE', ondelete='RESTRICT'),
                    sa.PrimaryKeyConstraint('id', name='users_pkey')
                    )

    op.create_index('users_id_card__idx', 'users', ['id_card'], unique=False)

    op.create_table('user_academic_records',
                    sa.Column('id', sa.INTEGER(), sa.Identity(always=True, start=1, increment=1, minvalue=1,
                              maxvalue=2147483647, cycle=False, cache=1), autoincrement=True, nullable=False),
                    sa.Column('title', sa.VARCHAR(length=255),
                              autoincrement=False, nullable=True),
                    sa.Column('grade', sa.NUMERIC(),
                              autoincrement=False, nullable=True),
                    sa.Column('user_id', sa.INTEGER(),
                              autoincrement=False, nullable=True),
                    sa.ForeignKeyConstraint(['user_id'], [
                        'users.id'], name='user_academic_records_fk_user_id', onupdate='CASCADE', ondelete='CASCADE'),
                    sa.PrimaryKeyConstraint(
                        'id', name='user_academic_records_pkey')
                    )
    # ### end Alembic commands ###
